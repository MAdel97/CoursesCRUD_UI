// <auto-generated />
using System;
using AcademicCoursesCRUD.AcademicCoursesCRUD.EntityModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AcademicCoursesCRUD.Migrations
{
    [DbContext(typeof(AcademicCoursesContext))]
    partial class AcademicCoursesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AcademicCoursesCRUD.Models.AcademicCourse", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Course_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcademicCoursesCourseId")
                        .HasColumnType("int");

                    b.Property<string>("CourseCode")
                        .HasColumnName("Course_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseCredit")
                        .HasColumnName("Course_Credit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.HasIndex("AcademicCoursesCourseId");

                    b.ToTable("Academic_Courses");
                });

            modelBuilder.Entity("AcademicCoursesCRUD.Models.AcademicCourse", b =>
                {
                    b.HasOne("AcademicCoursesCRUD.Models.AcademicCourse", "AcademicCourses")
                        .WithMany()
                        .HasForeignKey("AcademicCoursesCourseId");
                });
#pragma warning restore 612, 618
        }
    }
}
