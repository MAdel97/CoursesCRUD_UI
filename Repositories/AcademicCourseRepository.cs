using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

using Microsoft.Extensions.Configuration;
using AcademicCoursesCRUD.Interfaces;
using AcademicCoursesCRUD.Common;
using AcademicCoursesCRUD.AcademicCoursesCRUD.EntityModel;
using AcademicCoursesCRUD.Models;
using AcademicCoursesCRUD.DTO;
using Microsoft.EntityFrameworkCore;

namespace AcademicCoursesCRUD.Repositories
{
    public class AcademicCoursesRepository : IAcademicCourseRepository
    {
        private AcademicCoursesContext _context = null;
        private DbSet<AcademicCourse> _courses = null;
        private readonly IConfiguration _configuration;


        public AcademicCoursesRepository()
        {
            this._context = new AcademicCoursesContext();

            _courses = _context.Set<AcademicCourse>();
        }

        public async Task<AcademicCourse> AddacCourse(AcademicCourse _obj)
        {

            DateTime DateTime_ = DateTime.Now;

            using (var transaction = _context.Database.BeginTransaction())
            {
                try
                {


                    _courses.Add(_obj);
                    await _context.SaveChangesAsync();
                    transaction.CommitAsync();
                }


                catch (Exception ex)
                {


                    Console.Write("An error occured");
                }
            }
            return _obj;
        }


        public async Task<List<AcademicCourse>> GetAllCourses()
        {

            var list = new List<AcademicCourse>();
            DateTime DateTime_ = DateTime.Now;

            try
            {


                list = await _context.AcademicCourses.ToListAsync();

            }
            catch (Exception ex)
            {
                Console.Write("An error occured");
            }

            return list;
        }


        public async Task<AcademicCourse> GetCourseById(int CourseID)
        {

            //var list = new List<AcademicCourse>();
            DateTime DateTime_ = DateTime.Now;
            var course = new AcademicCourse();

            try
            {


                course = _courses.Where(m => m.CourseId==CourseID).First();

            }
            catch (Exception ex)
            {
                Console.Write("An error occured");

            }
            return course;


        }


        public async Task<AcademicCourse> UpdateCourse(AcademicCourse course,int ID)
        {

            //var list = new List<AcademicCourse>();
            DateTime DateTime_ = DateTime.Now;
            ///var course = new AcademicCourse();
            var result = new AcademicCourse();
            try
            {
                course.CourseId= ID;

                result = _courses.Update(course).Entity;
                _context.SaveChanges();

            }
            catch (Exception ex)
            {
                Console.Write("An error occured");

            }
            return result;


        }


        public async Task<AcademicCourse> DeleteCourse(int CourseId)
        {

            //var list = new List<AcademicCourse>();
            DateTime DateTime_ = DateTime.Now;
            ///var course = new AcademicCourse();
            var result = new AcademicCourse();   
            try
            {

                result = _courses.Where(m => m.CourseId == CourseId).First();
                result = _courses.Remove(result).Entity;
                _context.SaveChanges();

            }
            catch (Exception ex)
            {
                Console.Write("An error occured");

            }
            return result;


        }










    }
}
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































